# üì¶ –ë–ª–æ–∫ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ Telegram-–±–æ—Ç–∞ (aiogram 3.x)
# –≠—Ç–æ—Ç –±–ª–æ–∫ —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ—à–∞–≥–æ–≤—ã–π –≤—ã–±–æ—Ä –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()

# üìò –®–∞–≥–∏ –≤—ã–±–æ—Ä–∞
class OrderStates(StatesGroup):
    choosing_week = State()
    choosing_day = State()
    choosing_meal = State()
    confirming = State()

# üìÜ –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–µ–ª—å (–≤–∑—è—Ç—ã–π –∏–∑ —Å–∫—Ä–∏–Ω–∞)
WEEKS = [
    ("–¢–∏–∂–¥–µ–Ω—å 1", "01.09.2025 ‚Äì 05.09.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 2", "08.09.2025 ‚Äì 12.09.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 3", "15.09.2025 ‚Äì 19.09.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 4", "22.09.2025 ‚Äì 26.09.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 5", "29.09.2025 ‚Äì 03.10.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 6", "06.10.2025 ‚Äì 10.10.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 7", "13.10.2025 ‚Äì 17.10.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 8", "20.10.2025 ‚Äì 24.10.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 9", "27.10.2025 ‚Äì 31.10.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 10", "03.11.2025 ‚Äì 07.11.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 11", "10.11.2025 ‚Äì 14.11.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 12", "17.11.2025 ‚Äì 21.11.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 13", "24.11.2025 ‚Äì 28.11.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 14", "01.12.2025 ‚Äì 05.12.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 15", "08.12.2025 ‚Äì 12.12.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 16", "15.12.2025 ‚Äì 19.12.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 17", "22.12.2025 ‚Äì 26.12.2025"),
    ("–¢–∏–∂–¥–µ–Ω—å 18", "29.12.2025 ‚Äì 31.12.2025")
]

DAYS = ["–ü–æ–Ω–µ–¥—ñ–ª–æ–∫", "–í—ñ–≤—Ç–æ—Ä–æ–∫", "–°–µ—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä", "–ü'—è—Ç–Ω–∏—Ü—è"]

MEALS = ["–°–Ω—ñ–¥–∞–Ω–æ–∫ —Å–æ–ª–æ–Ω–∏–π", "–°–Ω—ñ–¥–∞–Ω–æ–∫ —Å–æ–ª–æ–¥–∫–∏–π", "–û–±—ñ–¥", "–ü–æ–ª—É–¥–µ–Ω–æ–∫"]

@router.message(F.text == "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è")
async def start_order(message: Message, state: FSMContext):
    builder = InlineKeyboardBuilder()
    for i, (label, _) in enumerate(WEEKS):
        builder.button(text=label, callback_data=f"week_{i}")
    builder.adjust(2)  # –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    await state.set_state(OrderStates.choosing_week)
    await message.answer("üìÜ –û–±–µ—Ä—ñ—Ç—å —Ç–∏–∂–¥–µ–Ω—å:", reply_markup=builder.as_markup())

@router.callback_query(F.data.startswith("week_"))
async def week_chosen(callback: CallbackQuery, state: FSMContext):
    week_index = int(callback.data.split("_")[1])
    await state.update_data(week=WEEKS[week_index][0])
    await callback.message.answer(f"‚úÖ –í–∏ –æ–±—Ä–∞–ª–∏: {WEEKS[week_index][0]}")
    await callback.message.answer("(—Ç—É—Ç –±—É–¥–µ –≤–∏–±—ñ—Ä –¥–Ω—ñ–≤ —Ç–∞ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è ‚Äî –±—É–¥–µ –≤ –Ω–∞—Å—Ç—É–ø–Ω–æ–π —á–∞—Å—Ç–∏–Ω—ñ)")
    await callback.answer()
